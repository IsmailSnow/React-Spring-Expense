{"ast":null,"code":"import _defineProperty from \"/Users/ismail/Desktop/React/Spring-React/expense-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ismail/Desktop/React/Spring-React/expense-front/src/Expense.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport AppNav from './AppNav';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\nimport { Table, Container, Input, Button, Label, FormGroup, Form } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nclass Expense extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      description: '',\n      expensedate: new Date(),\n      id: 104,\n      location: '',\n      category: {\n        id: 1,\n        name: 'Travel'\n      }\n    };\n    this.state = {\n      isLoading: false,\n      Categories: [],\n      Expsenses: [],\n      date: new Date(),\n      item: this.emptyItem\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  async handleSubmit(event) {\n    const item = this.state.item;\n    await fetch(\"/api/expenses\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    event.peventDefault();\n    this.props.history.push(\"/expenses\");\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let item = _objectSpread({}, this.state.item);\n\n    item[name] = value;\n    this.setState({\n      item\n    });\n    console.log(item);\n  }\n\n  handleDateChange(date) {\n    let item = _objectSpread({}, this.state.item);\n\n    item.expensedate = date;\n    this.setState({\n      item\n    });\n  }\n\n  async remove(id) {\n    await fetch(\"/api/expenses/\".concat(id), {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedExpenses = [...this.state.Expsenses].filter(i => i.id !== id);\n      this.setState({\n        Expsenses: updatedExpenses\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/categories');\n    const body = await response.json();\n    this.setState({\n      Categories: body,\n      isLoading: false\n    });\n    const responseExp = await fetch('/api/expenses');\n    const bodyExp = await responseExp.json();\n    this.setState({\n      Expsenses: bodyExp,\n      isLoading: false\n    });\n    console.log(bodyExp);\n  }\n\n  render() {\n    const title = React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Add Expense\");\n    const categories = this.state.categories;\n    const _this$state = this.state,\n          expenses = _this$state.expenses,\n          isLoading = _this$state.isLoading;\n    if (isLoading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Loading....\");\n    let optionList = categories.map(category => React.createElement(\"option\", {\n      value: category.id,\n      key: category.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, category.name));\n    let rows = expenses.map(expense => React.createElement(\"tr\", {\n      key: expense.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, expense.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, expense.location), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      date: expense.expensedate,\n      format: \"YYYY/MM/DD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, expense.category.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      color: \"danger\",\n      onClick: () => this.remove(expense.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Delete\"))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(AppNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, title, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      type: \"description\",\n      name: \"description\",\n      id: \"description\",\n      onChange: this.handleChange,\n      autoComplete: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"select\", {\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, optionList)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Date\"), React.createElement(DatePicker, {\n      selected: this.state.item.expensedate,\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"col-md-4 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Location\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Save\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Cancel\")))), '', React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Expense List\"), React.createElement(Table, {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"30%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \" Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \" Category\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, rows))), \"}\");\n  }\n\n}\n\nexport default Expsenses;","map":{"version":3,"sources":["/Users/ismail/Desktop/React/Spring-React/expense-front/src/Expense.js"],"names":["React","Component","AppNav","DatePicker","Table","Container","Input","Button","Label","FormGroup","Form","Link","Moment","Expense","constructor","props","emptyItem","description","expensedate","Date","id","location","category","name","state","isLoading","Categories","Expsenses","date","item","handleSubmit","bind","handleChange","handleDateChange","event","fetch","method","headers","body","JSON","stringify","peventDefault","history","push","target","value","setState","console","log","remove","then","updatedExpenses","filter","i","componentDidMount","response","json","responseExp","bodyExp","render","title","categories","expenses","optionList","map","rows","expense"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AppNav from './AppNav';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\nimport { Table, Container, Input, Button, Label, FormGroup, Form } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nclass Expense extends Component {\n\n\n    emptyItem = {\n        description : '' ,\n        expensedate : new Date(),\n        id:104,\n        location : '',\n        category : {id:1 , name:'Travel'}\n    }\n\n    constructor(props){\n        super(props)\n  \n        this.state = { \n          isLoading :false,\n          Categories:[],\n          Expsenses : [],\n          date :new Date(),\n          item : this.emptyItem\n         }\n  \n         this.handleSubmit= this.handleSubmit.bind(this);\n         this.handleChange= this.handleChange.bind(this);\n         this.handleDateChange= this.handleDateChange.bind(this);\n  \n      }\n\n      async handleSubmit(event){\n     \n        const item = this.state.item;\n      \n  \n        await fetch(`/api/expenses`, {\n          method : 'POST',\n          headers : {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body : JSON.stringify(item),\n        });\n        \n        event.peventDefault();\n        this.props.history.push(\"/expenses\");\n      }\n  \n  \n      handleChange(event){\n        const target= event.target;\n        const value= target.value;\n        const name = target.name;\n        let item={...this.state.item};\n        item[name] = value;\n        this.setState({item});\n        console.log(item);\n      }\n  \n  \n      handleDateChange(date){\n        let item={...this.state.item};\n        item.expensedate= date;\n        this.setState({item});\n      \n      }\n  \n  \n  \n  \n  \n  \n      async remove(id){\n          await fetch(`/api/expenses/${id}` , {\n            method: 'DELETE' ,\n            headers : {\n              'Accept' : 'application/json',\n              'Content-Type' : 'application/json'\n            }\n  \n          }).then(() => {\n            let updatedExpenses = [...this.state.Expsenses].filter(i => i.id !== id);\n            this.setState({Expsenses : updatedExpenses});\n          });\n  \n      }\n  \n  \n      async componentDidMount() {\n   \n       \n  \n          const response= await fetch('/api/categories');\n          const body= await response.json();\n          this.setState({Categories : body , isLoading :false});\n  \n  \n          const responseExp= await fetch('/api/expenses');\n          const bodyExp = await responseExp.json();\n          this.setState({Expsenses : bodyExp , isLoading :false});\n          console.log(bodyExp);\n  \n      }\n\n\n\n    render() {\n        const title = <h3>Add Expense</h3>\n        const {categories} = this.state\n        const {expenses,isLoading} = this.state\n\n        if (isLoading)\n            return(<div>Loading....</div>)\n        \n\n\n        let optionList  =\n                categories.map( (category) =>\n                    <option value={category.id} key={category.id}>\n                                {category.name} \n                    </option>\n                )\n        \n        let rows=\n            expenses.map( expense =>\n              <tr key={expense.id}>\n                <td>{expense.description}</td>\n                <td>{expense.location}</td>\n                <td><Moment date={expense.expensedate} format=\"YYYY/MM/DD\"/></td>\n                <td>{expense.category.name}</td>\n                <td><Button size=\"sm\" color=\"danger\" onClick={() => this.remove(expense.id)}>Delete</Button></td>\n\n              </tr>\n\n\n            )\n\n\n\n\n        return (\n            <div>\n                <AppNav />\n                <Container>\n                    {title}\n\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                            <Label for=\"description\">Title</Label>\n                            <Input type=\"description\" name=\"description\" id=\"description\"\n                                onChange={this.handleChange} autoComplete=\"name\" />\n\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"category\" >Category</Label>\n                            <select onChange={this.handleChange}>\n                                {optionList}\n                            </select>\n\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Label for=\"city\">Date</Label>\n                            <DatePicker selected={this.state.item.expensedate} onChange={this.handleDateChange} />\n                        </FormGroup>\n\n                        <div className=\"row\">\n                            <FormGroup className=\"col-md-4 mb-3\">\n                                <Label for=\"location\">Location</Label>\n                                <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.handleChange} />\n                            </FormGroup>\n\n                        </div>\n                        <FormGroup>\n                            <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                            <Button color=\"secondary\" tag={Link} to=\"/\">Cancel</Button>\n                        </FormGroup>\n                    </Form>\n                </Container>\n\n\n                {''}\n                <Container>\n                    <h3>Expense List</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                            <tr>\n                                <th width=\"30%\">Description</th>\n                                <th width=\"10%\">Location</th>\n                                <th> Date</th>\n                                <th> Category</th>\n                                <th width=\"10%\">Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {rows}\n                        </tbody>\n\n                    </Table>\n                </Container>\n\n                }\n      \n        </div>\n\n        );\n    }\n}\n\nexport default Expsenses;"]},"metadata":{},"sourceType":"module"}